{"ast":null,"code":"var _jsxFileName = \"/Users/felipe-note/dev/tarkov-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { request, gql } from 'graphql-request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Your GraphQL query\n        const query = gql`\n          {\n            items {\n              id\n              name\n              basePrice\n              avg24hPrice\n              gridImageLink\n              inspectImageLink\n              usedInTasks {\n                id\n                name\n                minPlayerLevel\n              }\n              wikiLink\n            }\n          }\n        `;\n\n        // Make a request to the GraphQL endpoint\n        const data = await request('https://api.tarkov.dev/graphql', query);\n        setItems(data.items);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    // Call the fetchData function\n    fetchData();\n  }, []); // The empty dependency array ensures that the effect runs once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tarkov Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"ID: \", item.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Base Price: \", item.basePrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Avg 24h Price: \", item.avg24hPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.gridImageLink,\n          alt: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.wikiLink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Wiki Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: item.usedInTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Task: \", task.name, \", Min Player Level: \", task.minPlayerLevel]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","request","gql","jsxDEV","_jsxDEV","App","_s","items","setItems","fetchData","query","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","id","basePrice","avg24hPrice","src","gridImageLink","alt","href","wikiLink","target","rel","usedInTasks","task","minPlayerLevel","_c","$RefreshReg$"],"sources":["/Users/felipe-note/dev/tarkov-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { request, gql } from 'graphql-request';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Your GraphQL query\n        const query = gql`\n          {\n            items {\n              id\n              name\n              basePrice\n              avg24hPrice\n              gridImageLink\n              inspectImageLink\n              usedInTasks {\n                id\n                name\n                minPlayerLevel\n              }\n              wikiLink\n            }\n          }\n        `;\n\n        // Make a request to the GraphQL endpoint\n        const data = await request('https://api.tarkov.dev/graphql', query);\n\n        setItems(data.items);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    // Call the fetchData function\n    fetchData();\n  }, []); // The empty dependency array ensures that the effect runs once when the component mounts\n\n  return (\n    <div>\n      <h1>Tarkov Items</h1>\n      <ul>\n        {items.map(item => (\n          <div key={item.id}>\n            <h3>{item.name}</h3>\n            <p>ID: {item.id}</p>\n            <p>Base Price: {item.basePrice}</p>\n            <p>Avg 24h Price: {item.avg24hPrice}</p>\n            <img src={item.gridImageLink} alt={item.name} />\n            <a href={item.wikiLink} target=\"_blank\" rel=\"noopener noreferrer\">\n              Wiki Link\n            </a>\n            <ul>\n              {item.usedInTasks.map(task => (\n                <li key={task.id}>\n                  Task: {task.name}, Min Player Level: {task.minPlayerLevel}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}